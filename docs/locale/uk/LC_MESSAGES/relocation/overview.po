#
msgid ""
msgstr ""
"Project-Id-Version: openprocurement.relocation.api 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-06 03:44+0300\n"
"PO-Revision-Date: 2016-07-07 13:09+0200\n"
"Last-Translator: sorenabell <sorenabell@quintagroup.com>\n"
"Language-Team: Ukrainian <support@quintagroup.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../../source/relocation/overview.rst:2
msgid "Overview"
msgstr "Огляд"

#: ../../source/relocation/overview.rst:5
msgid "Conventions"
msgstr "Домовленості"

#: ../../source/relocation/overview.rst:6
msgid ""
"All API POST and PUT requests expect a top-level object with a single "
"element in it named `data`.  Successful responses will mirror this "
"format. The data element should itself be an object, containing the "
"parameters for the request.  In the case of creating a new tender, these "
"are the fields we want to set on the tender itself."
msgstr ""
"Всі API POST та PUT запити очікують об'єкт верхнього рівня з єдиним "
"елементом з назвою `data`. Відповіді з повідомленням про успіх будуть "
"віддзеркалювати цей формат. Елемент data повинен сам бути об’єктом, що "
"містить параметри запиту. Якщо створюється нова закупівля, то це ті поля,"
" які ми хочемо встановити на самій закупівлі."

#: ../../source/relocation/overview.rst:12
msgid ""
"If the request was successful, we will get a response code of `201` "
"indicating the object was created.  That response will have a data field "
"at its top level, which will contain complete information on the new "
"tender, including its ID."
msgstr ""
"Якщо запит був успішним, ми отримаємо код відповіді `201`, який вказує, "
"що об’єкт був створений. Ця відповідь буде мати data поле на верхньому "
"рівні, яке вміщуватиме повну інформацію про нову закупівлю, включно з ID."

#: ../../source/relocation/overview.rst:17
msgid ""
"If something went wrong during the request, we'll get a different status "
"code and the JSON returned will have an `errors` field at the top level "
"containing a list of problems.  We look at the first one and print out "
"its message."
msgstr ""
"Якщо під час запиту виникли труднощі, ми отримаємо інший код стану та "
"JSON, який при поверненні міститиме `errors` поле на верхньому рівні зі "
"списком проблем. Ми дивимось на першу з них і видруковуємо її "
"повідомлення."
